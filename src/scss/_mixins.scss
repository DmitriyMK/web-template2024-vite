// responsive
@mixin viewport-md {
  @media (min-width: 767px) {
    @content;
  }
}

// rem
@function rem($val, $base: 16) {
	// if it's a unitless number
	@if type-of($val) == number and unitless($val) {
		// don't convert 0
		@if $val == 0 {
			@return 0;
		}
		// assume its px and convert it to rem based on $base document font-size
		@return calc($val / $base) * 1rem;
	}

	@return $val;
}

// Hover underline
@mixin hover-underline($type: fade, $dir: null, $weight: 2px, $color: currentColor) {
	display: inline-block;
	position: relative;
	text-decoration: none;

	@if $dir == null {
		@if $type == fade {
			$dir: "top";
		}

		@else if $type == slide {
			$dir: "center";
		}
	}

	&:after {
		content: "";
		position: absolute;
		left: 0;
		width: 100%;
		height: $weight;
		background: $color;

		@if $type == fade {
			transition: .3s;
			opacity: 0;
			visibility: hidden;

			@if $dir == bottom {
				bottom: $weight * -4;
			}

			@else {
				bottom: $weight;
			}
		}

		@else if $type == slide {
			bottom: $weight * -4;
			transform: scale(0, 1);
			transition: transform .3s;

			@if $dir == left-right or $dir == right-in-left {
				transform-origin: left top;
			}

			@else if $dir == right-left or $dir == left-in-right {
				transform-origin: right top;
			}

			@else {
				transform-origin: center top;
			}
		}
	}

	&:hover:after {
		@if $type == fade {
			bottom: $weight * -2;
			opacity: 1;
			visibility: visible;
		}

		@else if $type == slide {
			@if $dir == left-in-right {
				transform-origin: left top;
			}

			@else if $dir == right-in-left {
				transform-origin: right top;
			}

			transform: scale(1, 1);
		}
	}
}